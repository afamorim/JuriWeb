CREATE SEQUENCE SEQ_FUNCIONALIDADE;
CREATE TABLE FUNCIONALIDADE (
  SEQ_FUNCIONALIDADE INTEGER NOT NULL,
  NOME VARCHAR(50) NULL,
  DESCRICAO VARCHAR(100) NULL,
  PRIMARY KEY(SEQ_FUNCIONALIDADE)
);

CREATE SEQUENCE SEQ_LINK_FUNCAO;
CREATE TABLE LINK_FUNCAO (
  SEQ_LINK INTEGER NOT NULL,
  URL VARCHAR(100) NULL UNIQUE,
  DESCRICAO VARCHAR(100) NULL,
  TIPO CHAR(1) NULL,
  PRIMARY KEY(SEQ_LINK)
);

CREATE SEQUENCE SEQ_FUNCAO;
CREATE TABLE FUNCAO (
  SEQ_FUNCAO INTEGER NOT NULL,
  SEQ_LINK INTEGER NOT NULL,
  NOME VARCHAR(50) NULL UNIQUE,
  DESCRICAO VARCHAR(100) NULL,
  PRIMARY KEY(SEQ_FUNCAO),
  FOREIGN KEY(SEQ_LINK)
    REFERENCES LINK_FUNCAO(SEQ_LINK)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_PERFIL;
CREATE TABLE PERFIL (
  SEQ_PERFIL INTEGER NOT NULL,
  NOME VARCHAR(50) NULL UNIQUE,
  DESCRICAO VARCHAR(100) NULL,
  PRIMARY KEY(SEQ_PERFIL)
);

CREATE SEQUENCE SEQ_USUARIO;
CREATE TABLE USUARIO (
  SEQ_USUARIO INTEGER NOT NULL,
  SEQ_PERFIL INTEGER NOT NULL,
  NOME VARCHAR(100) NULL,
  LOGIN VARCHAR(100) NULL UNIQUE,
  SENHA VARCHAR(100) NULL,
  PRIMARY KEY(SEQ_USUARIO),
  FOREIGN KEY(SEQ_PERFIL)
    REFERENCES PERFIL(SEQ_PERFIL)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE FUNCAO_FUNCIONALIDADE (
  SEQ_FUNCAO INTEGER NOT NULL,
  SEQ_FUNCIONALIDADE INTEGER NOT NULL,
  PRIMARY KEY(SEQ_FUNCAO, SEQ_FUNCIONALIDADE),
  FOREIGN KEY(SEQ_FUNCAO)
    REFERENCES FUNCAO(SEQ_FUNCAO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SEQ_FUNCIONALIDADE)
    REFERENCES FUNCIONALIDADE(SEQ_FUNCIONALIDADE)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE PERFIL_FUNCAO (
  SEQ_PERFIL INTEGER NOT NULL,
  SEQ_FUNCAO INTEGER NOT NULL,
  PRIMARY KEY(SEQ_PERFIL, SEQ_FUNCAO),
  FOREIGN KEY(SEQ_FUNCAO)
    REFERENCES FUNCAO(SEQ_FUNCAO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SEQ_PERFIL)
    REFERENCES PERFIL(SEQ_PERFIL)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE PERFIL_FUNCIONALIDADE (
  SEQ_FUNCIONALIDADE INTEGER NOT NULL,
  SEQ_PERFIL INTEGER NOT NULL,
  PRIMARY KEY(SEQ_FUNCIONALIDADE, SEQ_PERFIL),
  FOREIGN KEY(SEQ_PERFIL)
    REFERENCES PERFIL(SEQ_PERFIL)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SEQ_FUNCIONALIDADE)
    REFERENCES FUNCIONALIDADE(SEQ_FUNCIONALIDADE)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE USUARIO_FUNCAO (
  SEQ_USUARIO INTEGER NOT NULL,
  SEQ_FUNCAO INTEGER NOT NULL,
  PRIMARY KEY(SEQ_USUARIO, SEQ_FUNCAO),
  FOREIGN KEY(SEQ_FUNCAO)
    REFERENCES FUNCAO(SEQ_FUNCAO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SEQ_USUARIO)
    REFERENCES USUARIO(SEQ_USUARIO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE USUARIO_FUNCIONALIDADE (
  SEQ_USUARIO INTEGER NOT NULL,
  SEQ_FUNCIONALIDADE INTEGER NOT NULL,
  PRIMARY KEY(SEQ_USUARIO, SEQ_FUNCIONALIDADE),
  FOREIGN KEY(SEQ_USUARIO)
    REFERENCES USUARIO(SEQ_USUARIO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SEQ_FUNCIONALIDADE)
    REFERENCES FUNCIONALIDADE(SEQ_FUNCIONALIDADE)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_FORMA_PAGAMENTO;
CREATE TABLE FORMA_PAGAMENTO (
  FORMA_PAGAMENTO_CODIGO INTEGER NOT NULL,
  DES_TIPO_PAGAMENTO VARCHAR(150) NOT NULL,
  PRIMARY KEY(FORMA_PAGAMENTO_CODIGO)
);

CREATE SEQUENCE SEQ_ESTADO;
CREATE TABLE ESTADO (
  ESTADO_CODIGO INTEGER NOT NULL,
  NOM_ESTADO VARCHAR(100) NOT NULL,
  SIG_ESTADO VARCHAR(10) NOT NULL,
  PRIMARY KEY(ESTADO_CODIGO)
);

CREATE SEQUENCE SEQ_JUIZO;
CREATE TABLE JUIZO (
  JUIZO_CODIGO INTEGER NOT NULL,
  DES_JUIZO VARCHAR(150) NOT NULL,
  PRIMARY KEY(JUIZO_CODIGO)
);

CREATE SEQUENCE SEQ_PESSOA;
CREATE TABLE PESSOA (
  PESSOA_CODIGO INTEGER NOT NULL,
  USUARIO_CODIGO INTEGER NOT NULL,
  NOME VARCHAR(150) NOT NULL,
  STR_TELEFONE VARCHAR(20) NULL,
  CPF_CNPJ VARCHAR(30) NULL,
  ENDERECO VARCHAR(150) NULL,
  APTO INTEGER NULL,
  BLOCO VARCHAR(5) NULL,
  TIPO_PESSOA INTEGER NOT NULL,
  OBSERVACAO TEXT NOT NULL,
  CONTATO VARCHAR(100) NULL,
  CEP VARCHAR(20) NULL,
  PRIMARY KEY(PESSOA_CODIGO)
);

CREATE SEQUENCE SEQ_CLASSE_PROCESSO;
CREATE TABLE CLASSE_PROCESSO (
  CLASSE_PROCESSO_CODIGO INTEGER NOT NULL,
  JUIZO_CODIGO INTEGER NOT NULL,
  DES_CLASSE_PROCESSO VARCHAR NULL,
  PRIMARY KEY(CLASSE_PROCESSO_CODIGO),
  FOREIGN KEY(JUIZO_CODIGO)
    REFERENCES JUIZO(JUIZO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
   
);

CREATE SEQUENCE SEQ_BANCO;
CREATE TABLE BANCO (
  BANCO_CODIGO INTEGER NOT NULL,
  NUM_BANCO INTEGER NOT NULL,
  NOM_BANCO VARCHAR(150) NOT NULL,
  PRIMARY KEY(BANCO_CODIGO)
);

CREATE SEQUENCE SEQ_TIPO_ORGAO_JUDICIARIO;
CREATE TABLE TIPO_ORGAO_JUDICIARIO (
  TIPO_ORGAO_JUDICIARIO_CODIGO INTEGER NOT NULL,
  DES_TIPO_ORGAO_JUDICIARIO VARCHAR(150) NOT NULL,
  PRIMARY KEY(TIPO_ORGAO_JUDICIARIO_CODIGO)
);

CREATE SEQUENCE SEQ_TIPO_ANDAMENTO;
CREATE TABLE TIPO_ANDAMENTO (
  TIPO_ANDAMENTO_CODIGO INTEGER NOT NULL,
  JUIZO_CODIGO INTEGER NOT NULL,
  DES_TIPO_ANDAMENTO VARCHAR(150) NOT NULL,
  PRIMARY KEY(TIPO_ANDAMENTO_CODIGO),
  FOREIGN KEY(JUIZO_CODIGO)
    REFERENCES JUIZO(JUIZO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_CHEQUE;
CREATE TABLE CHEQUE (
  CHEQUE_CODIGO INTEGER NOT NULL,
  BANCO_CODIGO INTEGER NOT NULL,
  NUM_CHEQUE INTEGER NOT NULL,
  NUM_AGENCIA INTEGER NOT NULL,
  PRIMARY KEY(CHEQUE_CODIGO),
  FOREIGN KEY(BANCO_CODIGO)
    REFERENCES BANCO(BANCO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_MUNICIPIO;
CREATE TABLE MUNICIPIO (
  MUNICIPIO_CODIGO INTEGER NOT NULL,
  ESTADO_CODIGO INTEGER NOT NULL,
  NOM_MUNICIPIO VARCHAR(100) NOT NULL,
  PRIMARY KEY(MUNICIPIO_CODIGO),
  FOREIGN KEY(ESTADO_CODIGO)
    REFERENCES ESTADO(ESTADO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_PAGAMENTO;
CREATE TABLE PAGAMENTO (
  PAGAMENTO_CODIGO INTEGER NOT NULL,
  CHEQUE_CODIGO INTEGER,
  FORMA_PAGAMENTO_CODIGO INTEGER NOT NULL,
  VL_PAGAMENTO FLOAT NOT NULL,
  VL_PAGO FLOAT NOT NULL,
  DT_PAGAMENTO DATE NOT NULL,
  STS_PAGAMENTO INTEGER NOT NULL,
  VL_MULTA FLOAT NULL,
  VL_JUROS FLOAT NULL,
  PRIMARY KEY(PAGAMENTO_CODIGO),
  FOREIGN KEY(FORMA_PAGAMENTO_CODIGO)
    REFERENCES FORMA_PAGAMENTO(FORMA_PAGAMENTO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(CHEQUE_CODIGO)
    REFERENCES CHEQUE(CHEQUE_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_ORGAO_JUDICIARIO;
CREATE TABLE ORGAO_JUDICIARIO (
  ORGAO_JUDICIARIO_CODIGO INTEGER NOT NULL,
  TIPO_ORGAO_JUDICIARIO_CODIGO INTEGER NOT NULL,
  JUIZO_CODIGO INTEGER NOT NULL,
  DES_ORGAO_JUDICIARIO VARCHAR(150) NOT NULL,
  PRIMARY KEY(ORGAO_JUDICIARIO_CODIGO),
  FOREIGN KEY(JUIZO_CODIGO)
    REFERENCES JUIZO(JUIZO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(TIPO_ORGAO_JUDICIARIO_CODIGO)
    REFERENCES TIPO_ORGAO_JUDICIARIO(TIPO_ORGAO_JUDICIARIO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_COMARCA;
CREATE TABLE COMARCA (
  COMARCA_CODIGO INTEGER NOT NULL,
  MUNICIPIO_CODIGO INTEGER NOT NULL,
  PRIMARY KEY(COMARCA_CODIGO),
  FOREIGN KEY(MUNICIPIO_CODIGO)
    REFERENCES MUNICIPIO(MUNICIPIO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_PROCESSO;
CREATE TABLE PROCESSO (
  PROCESSO_CODIGO INTEGER NOT NULL,
  CLASSE_PROCESSO_CODIGO INTEGER NOT NULL,
  ORGAO_JUDICIARIO_CODIGO INTEGER NOT NULL,
  COMARCA_CODIGO INTEGER NOT NULL,
  STR_NUMERO_PROCESSO VARCHAR(100) NOT NULL,
  STS_PROCESSO INTEGER,
  VL_CAUSA FLOAT NOT NULL,
  DT_DISTRIBUICAO DATE NOT NULL,
  STR_TURNO VARCHAR(30) NULL,
  PERCENTAGEM_HONORARIO FLOAT NULL,
  DT_AUTUCAO DATE NULL,
  PRIMARY KEY(PROCESSO_CODIGO),
  FOREIGN KEY(COMARCA_CODIGO)
    REFERENCES COMARCA(COMARCA_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ORGAO_JUDICIARIO_CODIGO)
    REFERENCES ORGAO_JUDICIARIO(ORGAO_JUDICIARIO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(CLASSE_PROCESSO_CODIGO)
    REFERENCES CLASSE_PROCESSO(CLASSE_PROCESSO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_ACORDO;
CREATE TABLE ACORDO (
  ACORDO_CODIGO INTEGER NOT NULL,
  PROCESSO_CODIGO INTEGER NOT NULL,
  VAL_ACORDO FLOAT NOT NULL,
  QTD_PARCELAS INTEGER NOT NULL,
  DT_VENCIMENTO DATE NOT NULL,
  STR_OBSERVACAO VARCHAR(255) NULL,
  PRIMARY KEY(ACORDO_CODIGO),
  FOREIGN KEY(PROCESSO_CODIGO)
    REFERENCES PROCESSO(PROCESSO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_TAXA;
CREATE TABLE TAXA (
  TAXA_CODIGO INTEGER NOT NULL,
  ACORDO_CODIGO INTEGER NOT NULL,
  TIPO_TAXA INTEGER NOT NULL,
  NUM_MES INTEGER NOT NULL,
  NUM_ANO INTEGER NOT NULL,
  PRIMARY KEY(TAXA_CODIGO),
  FOREIGN KEY(ACORDO_CODIGO)
    REFERENCES ACORDO(ACORDO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_ANDAMENTO;
CREATE TABLE ANDAMENTO (
  ANDAMENTO_CODIGO INTEGER NOT NULL,
  TIPO_ANDAMENTO_CODIGO INTEGER NOT NULL,
  PROCESSO_CODIGO INTEGER NOT NULL,
  DES_ANDAMENTO VARCHAR(150) NOT NULL,
  DT_PRAZO DATE NOT NULL,
  STS_ANDAMENTO INTEGER NOT NULL,
  DT_LANCAMENTO DATE NOT NULL,
  PRIMARY KEY(ANDAMENTO_CODIGO),
  FOREIGN KEY(PROCESSO_CODIGO)
    REFERENCES PROCESSO(PROCESSO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(TIPO_ANDAMENTO_CODIGO)
    REFERENCES TIPO_ANDAMENTO(TIPO_ANDAMENTO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_PARTE;
CREATE TABLE PARTE (
  PROCESSO_CODIGO INTEGER NOT NULL,
  PESSOA_CODIGO INTEGER NOT NULL,
  TIPO_PARTE INTEGER NOT NULL,
  STS_CLIENTE INTEGER NOT NULL,
  FOREIGN KEY(PESSOA_CODIGO)
    REFERENCES PESSOA(PESSOA_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(PROCESSO_CODIGO)
    REFERENCES PROCESSO(PROCESSO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_PARCELA_ACORDO;
CREATE TABLE PARCELA_ACORDO (
  PARCELA_ACORDO_CODIGO INTEGER NOT NULL,
  ACORDO_CODIGO INTEGER NOT NULL,
  PAGAMENTO_CODIGO INTEGER NULL,
  VL_PARCELA FLOAT NOT NULL,
  DT_VENCIMENTO INTEGER NOT NULL,
  NUM_PARCELA INTEGER NOT NULL,
  DT_REPASSE DATE NULL,
  VL_REPASSE FLOAT NULL,
  VL_HONORARIO FLOAT NULL,
  STR_OBSERVACAO VARCHAR(400) NULL,
  PRIMARY KEY(PARCELA_ACORDO_CODIGO),
  FOREIGN KEY(PAGAMENTO_CODIGO)
    REFERENCES PAGAMENTO(PAGAMENTO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ACORDO_CODIGO)
    REFERENCES ACORDO(ACORDO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_USUARIO;
CREATE TABLE USUARIO (
  USUARIO_CODIGO INTEGER NOT NULL,
  PESSOA_CODIGO INTEGER, 
  LOGIN VARCHAR NULL,
  SENHA VARCHAR NULL,
  TIPO_USUARIO VARCHAR NULL,
  PRIMARY KEY(USUARIO_CODIGO),
  FOREIGN KEY(PESSOA_CODIGO)
	REFERENCES PESSOA(PESSOA_CODIGO)  	
	   ON DELETE NO ACTION
	   ON UPDATE NO ACTION
);

CREATE TABLE TIPO_ANDAMENTO_JUIZO (
  TIPO_ANDAMENTO_CODIGO INTEGER NOT NULL,
  JUIZO_CODIGO INTEGER NULL,
  PRIMARY KEY(TIPO_ANDAMENTO_CODIGO, JUIZO_CODIGO),
  FOREIGN KEY(JUIZO_CODIGO)
    REFERENCES JUIZO(JUIZO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(TIPO_ANDAMENTO_CODIGO)
    REFERENCES TIPO_ANDAMENTO(TIPO_ANDAMENTO_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE SEQUENCE SEQ_INDICE_REAJUSTE;
CREATE TABLE INDICE_REAJUSTE (
  INDICE_REAJUSTE_CODIGO INTEGER NOT NULL,
  DES_INDICE_REAJUSTE VARCHAR(50) NULL,
  STR_NOME VARCHAR(10) NOT NULL,
  PRIMARY KEY(INDICE_REAJUSTE_CODIGO)
);

CREATE SEQUENCE SEQ_PERIODO_INDICE;
CREATE TABLE PERIODO_INDICE (
  PERIODO_INDICE_CODIGO INTEGER NOT NULL,
  INDICE_REAJUSTE_CODIGO INTEGER NOT NULL,
  MES INTEGER NULL,
  ANO INTEGER NULL,
  VALOR FLOAT NULL,
  PRIMARY KEY(PERIODO_INDICE_CODIGO),
  FOREIGN KEY(INDICE_REAJUSTE_CODIGO)
    REFERENCES INDICE_REAJUSTE(INDICE_REAJUSTE_CODIGO)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);